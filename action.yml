name: Setup JBang

description: 'Set up a specific version of JBang and add it to the PATH'

branding:
  icon: 'terminal'
  color: 'blue'

inputs:
  version:
    description: 'The version of JBang to download'
    default: 'latest'
    required: true

  setup-java:
    default: 'true'
    description: 'Setup internal Java runtime.'
    required: false

runs:
  using: 'composite'
  steps:
    - name: 'Download JBang'
      shell: bash
      if: runner.os != 'Windows'
      env:
        VERSION_INPUT: ${{ inputs.version }}
      run: |
        echo "::group::‚¨áÔ∏è Download JBang"
        if [[ "$VERSION_INPUT" != "latest" ]]; then
          export JBANG_DOWNLOAD_VERSION=$VERSION_INPUT
        fi
        curl -Ls https://sh.jbang.dev | bash -s - app setup
        echo "${HOME}/.jbang/bin" >> $GITHUB_PATH
        ${HOME}/.jbang/bin/jbang version
        echo "::endgroup::"
    - name: 'Setup JBang'
      shell: bash
      if: runner.os != 'Windows'
      run: |
        echo "::group::üîß Setup JBang"
        echo "${HOME}/.jbang/bin" >> $GITHUB_PATH
        ${HOME}/.jbang/bin/jbang version
        echo "::endgroup::"
    - name: 'Download JBang (Windows)'
      shell: pwsh
      if: runner.os == 'Windows'
      env:
        VERSION_INPUT: ${{ inputs.version }}
      run: |
        echo "::group::‚¨áÔ∏è Download JBang"
        if ($env:VERSION_INPUT -ne "latest") {
          $env:JBANG_DOWNLOAD_VERSION = $env:VERSION_INPUT
        }
        iex "& { $(iwr https://ps.jbang.dev) } app setup"
        echo "::endgroup::"
    - name: 'Setup JBang (Windows)'
      shell: pwsh
      if: runner.os == 'Windows'
      run: |
        echo "::group::üîß Setup JBang"
        echo "$HOME\.jbang\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        & $HOME\.jbang\bin\jbang.ps1 version
        echo "::endgroup::"